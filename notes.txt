1. Purpose / the project idea : 
    - my object behind building this banking platform app using react and next js and following the javascript mastery youtube channel course is to learn new modern developpement methods. 
    - the link of the course : https://www.youtube.com/watch?v=DwbwuYYiBTk&t=40737s&ab_channel=JavaScriptMastery
2. Requirements : 
    - React. 
    - Next js - on top of react, most convinient choice framework for the web: building high quality application with the power of react components.
    - Plaid : baking functionnalites, one of the world leading power banking apis. this allow to turn this application to real banking application( not the budget tracked we see in other tutorials). we use plaid sandbox mode for buidling banking functionnalites.
    - appwrite : when it comes to mergin those transcations to our real database. this completly open source tool allow us to build the entire backend withi minutes and scale it effortlessly  
    - Chart.js : to display the statistics and different type of charts
    - tailwind css : utility-first for css framework to style our app components.
    - shadcn/ui : a component library to power our tailwind css (simple buttons, alerts, ...). 
    - Sentry: enterprise level application monitoring software to secure our banking app. ( session reply to get to the root cause of an issue). 
3. useful links : 
- ðŸŽ¨ Horizon Design Figma File: https://resource.jsmastery.pro/banking-app
- ðŸ§­ Logical Flow Diagram Fijam File: https://resource.jsmastery.pro/banking-app-flow

3. steps : 
    3.1. start by shadcn/ui : 
        * create next app in the current repository : npx create-next-app@latest ./ --typescript --tailwind --eslint 
        * install shad cn : npx shadcn@latest init -d
        * set up the font : 
        * set up the tailwind.config.js
        * test the app by adding a new button component : npx shadcn@latest add button
    3.2. getting the figma files for this project & logical flow of the applications using previous links.
    3.4. delete files auto generate files and assets : 
        * app/favicon.ico.
        * app/globals.css
        * app/fonts
        * lib/
        * public/
        * tailwind.config.ts  
    3.5. add assets used by tutorial downloaded from the description.
        * tailwind.config.ts : contains in the config>theme>extend>colors - the colors picked from the figma file.
        * types/index.d.ts : include some of typescript types which we will use in the application.
        * public/icons : icons.
        * lib/utils.ts : use chatgpt to generate it (formatting the date/formatting the amount/paresing the strings/removing special characters...)
        * constants/index.ts : constants like sidebar links + mock data.
        * app/globals.css : importing the tailwind and make some modifications to our base styles + implementing additional special styles that cannot easily be done with tailwind + @utilities for repeated styles (inputs..) 